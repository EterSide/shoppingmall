version: '3.8'

services:

  app:
    volumes:
      - upload_data:/home/uploads
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    ports:
      - "3308:3306"
    networks:
      - mynetwork

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - mynetwork

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092, PLAINTEXT_HOST://localhost:9093 #INTERNAL에 kafka:9092는 고정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT  #내부:PLAINTEXT 외부:PLAINTEXT_HOST
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # Replication factor: 3 larger than available brokers: 1 에러 발생 방지
    depends_on:
      - zookeeper
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  upload_data:
    driver: local